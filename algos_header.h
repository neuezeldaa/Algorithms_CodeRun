#pragma once
#include <math.h>
#include <set>
#include <vector>
#include <algorithm>
#include <string>


//Задача 1: Подается три элемента, вывести средний, "центральный" элемент
int SredniyElement(int a, int b, int c);

//Задача 5321: Подается К число уровней елки, на каждом уровне 2^(i-1) шариков, определить сколько шариков требуется для k уровней
int NaryajElka(int k);

//Задача 55: Свинки стреляют по птичкам из ружья. У птичек есть координаты
//Если попадают в птичку сверху, то она падает на всех птичек под ней.
//Требуется найти минимальное количество выстрелов для снова всех птичек количесвом N
int AngryPigs(int N);

//Задача 83: На клавиатуре есть N клавиш с количеством возможных нажатий на каждую клавишу,
// Задается последовательность из K нажатий. Определить, работает ли клавиша после этой последовательности?
int Keybord();

//Задача 62: Количество различных чисел в списке
int Different_numbers();

//Задача 54: Найти среди N участников, которые знают по M языков общие языки и языки, которые знает хотя бы 1 ученик. 
int poliglott();

//Задача 60: У Ани N кубиков, у Бори M кубиков, у каждого кубика свой цвет. Определить сходства и различие цветов кубиков.
int kubiki(int N, int M);


//Задача 58: На калькуляторе есть 3 цифры: x y z. Пользователь хочет ввести число N. Определить, 
//Сколько цифр нужно добавить калькулятору для того, чтоб вывести N.
int OpenCalculator(int x, int y, int z, int N);


//Задача 324: Много стульев. Мужик покупает стулья и продает их. 
//Нужно найти максимальную выгоду, учитывая, что в городе есть N продавцов, которые продают по 1 стулу по определенной цене
//И есть M покупателей, которые покупают по 1 стулу по определенной цене.
int AlotOfChairs(int N, int M);